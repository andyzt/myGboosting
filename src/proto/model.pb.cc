// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

#include "model.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace proto_model {
class LeafValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeafValue>
      _instance;
} _LeafValue_default_instance_;
class SplitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Split>
      _instance;
} _Split_default_instance_;
class TreeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tree>
      _instance;
} _Tree_default_instance_;
class BoundDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Bound>
      _instance;
} _Bound_default_instance_;
class ModelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Model>
      _instance;
} _Model_default_instance_;
}  // namespace proto_model
namespace protobuf_model_2eproto {
void InitDefaultsLeafValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto_model::_LeafValue_default_instance_;
    new (ptr) ::proto_model::LeafValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto_model::LeafValue::InitAsDefaultInstance();
}

void InitDefaultsLeafValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeafValueImpl);
}

void InitDefaultsSplitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto_model::_Split_default_instance_;
    new (ptr) ::proto_model::Split();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto_model::Split::InitAsDefaultInstance();
}

void InitDefaultsSplit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSplitImpl);
}

void InitDefaultsTreeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_model_2eproto::InitDefaultsLeafValue();
  protobuf_model_2eproto::InitDefaultsSplit();
  {
    void* ptr = &::proto_model::_Tree_default_instance_;
    new (ptr) ::proto_model::Tree();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto_model::Tree::InitAsDefaultInstance();
}

void InitDefaultsTree() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTreeImpl);
}

void InitDefaultsBoundImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::proto_model::_Bound_default_instance_;
    new (ptr) ::proto_model::Bound();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto_model::Bound::InitAsDefaultInstance();
}

void InitDefaultsBound() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBoundImpl);
}

void InitDefaultsModelImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_model_2eproto::InitDefaultsTree();
  protobuf_model_2eproto::InitDefaultsBound();
  {
    void* ptr = &::proto_model::_Model_default_instance_;
    new (ptr) ::proto_model::Model();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto_model::Model::InitAsDefaultInstance();
}

void InitDefaultsModel() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModelImpl);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::LeafValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::LeafValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::LeafValue, value_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Split, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Split, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Split, feature_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Split, bin_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Tree, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Tree, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Tree, leaf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Tree, splits_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Bound, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Bound, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Bound, bound_val_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Model, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Model, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Model, tree_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Model, feature_bounds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto_model::Model, lr_),
  ~0u,
  ~0u,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::proto_model::LeafValue)},
  { 7, 14, sizeof(::proto_model::Split)},
  { 16, 23, sizeof(::proto_model::Tree)},
  { 25, 31, sizeof(::proto_model::Bound)},
  { 32, 40, sizeof(::proto_model::Model)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto_model::_LeafValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto_model::_Split_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto_model::_Tree_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto_model::_Bound_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto_model::_Model_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "model.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013model.proto\022\013proto_model\"\032\n\tLeafValue\022"
      "\r\n\005Value\030\001 \002(\002\"+\n\005Split\022\022\n\nfeature_id\030\001 "
      "\002(\005\022\016\n\006bin_id\030\002 \002(\005\"P\n\004Tree\022$\n\004leaf\030\001 \003("
      "\0132\026.proto_model.LeafValue\022\"\n\006splits\030\002 \003("
      "\0132\022.proto_model.Split\"\032\n\005Bound\022\021\n\tbound_"
      "val\030\001 \003(\002\"`\n\005Model\022\037\n\004tree\030\001 \003(\0132\021.proto"
      "_model.Tree\022*\n\016feature_bounds\030\002 \003(\0132\022.pr"
      "oto_model.Bound\022\n\n\002lr\030\003 \002(\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 307);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "model.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_model_2eproto
namespace proto_model {

// ===================================================================

void LeafValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeafValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeafValue::LeafValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_model_2eproto::InitDefaultsLeafValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_model.LeafValue)
}
LeafValue::LeafValue(const LeafValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:proto_model.LeafValue)
}

void LeafValue::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0;
}

LeafValue::~LeafValue() {
  // @@protoc_insertion_point(destructor:proto_model.LeafValue)
  SharedDtor();
}

void LeafValue::SharedDtor() {
}

void LeafValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeafValue::descriptor() {
  ::protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeafValue& LeafValue::default_instance() {
  ::protobuf_model_2eproto::InitDefaultsLeafValue();
  return *internal_default_instance();
}

LeafValue* LeafValue::New(::google::protobuf::Arena* arena) const {
  LeafValue* n = new LeafValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeafValue::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_model.LeafValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LeafValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_model.LeafValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float Value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_model.LeafValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_model.LeafValue)
  return false;
#undef DO_
}

void LeafValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_model.LeafValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float Value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_model.LeafValue)
}

::google::protobuf::uint8* LeafValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto_model.LeafValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float Value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_model.LeafValue)
  return target;
}

size_t LeafValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_model.LeafValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required float Value = 1;
  if (has_value()) {
    total_size += 1 + 4;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeafValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_model.LeafValue)
  GOOGLE_DCHECK_NE(&from, this);
  const LeafValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeafValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_model.LeafValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_model.LeafValue)
    MergeFrom(*source);
  }
}

void LeafValue::MergeFrom(const LeafValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_model.LeafValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_value(from.value());
  }
}

void LeafValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_model.LeafValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeafValue::CopyFrom(const LeafValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_model.LeafValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeafValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void LeafValue::Swap(LeafValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeafValue::InternalSwap(LeafValue* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeafValue::GetMetadata() const {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Split::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Split::kFeatureIdFieldNumber;
const int Split::kBinIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Split::Split()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_model_2eproto::InitDefaultsSplit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_model.Split)
}
Split::Split(const Split& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&feature_id_, &from.feature_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&bin_id_) -
    reinterpret_cast<char*>(&feature_id_)) + sizeof(bin_id_));
  // @@protoc_insertion_point(copy_constructor:proto_model.Split)
}

void Split::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&feature_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bin_id_) -
      reinterpret_cast<char*>(&feature_id_)) + sizeof(bin_id_));
}

Split::~Split() {
  // @@protoc_insertion_point(destructor:proto_model.Split)
  SharedDtor();
}

void Split::SharedDtor() {
}

void Split::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Split::descriptor() {
  ::protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Split& Split::default_instance() {
  ::protobuf_model_2eproto::InitDefaultsSplit();
  return *internal_default_instance();
}

Split* Split::New(::google::protobuf::Arena* arena) const {
  Split* n = new Split;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Split::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_model.Split)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&feature_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bin_id_) -
        reinterpret_cast<char*>(&feature_id_)) + sizeof(bin_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Split::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_model.Split)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 feature_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_feature_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &feature_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 bin_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bin_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bin_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_model.Split)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_model.Split)
  return false;
#undef DO_
}

void Split::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_model.Split)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 feature_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->feature_id(), output);
  }

  // required int32 bin_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bin_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_model.Split)
}

::google::protobuf::uint8* Split::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto_model.Split)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 feature_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->feature_id(), target);
  }

  // required int32 bin_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bin_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_model.Split)
  return target;
}

size_t Split::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto_model.Split)
  size_t total_size = 0;

  if (has_feature_id()) {
    // required int32 feature_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->feature_id());
  }

  if (has_bin_id()) {
    // required int32 bin_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bin_id());
  }

  return total_size;
}
size_t Split::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_model.Split)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 feature_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->feature_id());

    // required int32 bin_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bin_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Split::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_model.Split)
  GOOGLE_DCHECK_NE(&from, this);
  const Split* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Split>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_model.Split)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_model.Split)
    MergeFrom(*source);
  }
}

void Split::MergeFrom(const Split& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_model.Split)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      feature_id_ = from.feature_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      bin_id_ = from.bin_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Split::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_model.Split)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Split::CopyFrom(const Split& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_model.Split)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Split::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Split::Swap(Split* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Split::InternalSwap(Split* other) {
  using std::swap;
  swap(feature_id_, other->feature_id_);
  swap(bin_id_, other->bin_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Split::GetMetadata() const {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Tree::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tree::kLeafFieldNumber;
const int Tree::kSplitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tree::Tree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_model_2eproto::InitDefaultsTree();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_model.Tree)
}
Tree::Tree(const Tree& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      leaf_(from.leaf_),
      splits_(from.splits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto_model.Tree)
}

void Tree::SharedCtor() {
  _cached_size_ = 0;
}

Tree::~Tree() {
  // @@protoc_insertion_point(destructor:proto_model.Tree)
  SharedDtor();
}

void Tree::SharedDtor() {
}

void Tree::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tree::descriptor() {
  ::protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tree& Tree::default_instance() {
  ::protobuf_model_2eproto::InitDefaultsTree();
  return *internal_default_instance();
}

Tree* Tree::New(::google::protobuf::Arena* arena) const {
  Tree* n = new Tree;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tree::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_model.Tree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  leaf_.Clear();
  splits_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Tree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_model.Tree)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_model.LeafValue leaf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_leaf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto_model.Split splits = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_splits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_model.Tree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_model.Tree)
  return false;
#undef DO_
}

void Tree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_model.Tree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto_model.LeafValue leaf = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->leaf_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->leaf(static_cast<int>(i)), output);
  }

  // repeated .proto_model.Split splits = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->splits_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->splits(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_model.Tree)
}

::google::protobuf::uint8* Tree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto_model.Tree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto_model.LeafValue leaf = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->leaf_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->leaf(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto_model.Split splits = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->splits_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->splits(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_model.Tree)
  return target;
}

size_t Tree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_model.Tree)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .proto_model.LeafValue leaf = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->leaf_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->leaf(static_cast<int>(i)));
    }
  }

  // repeated .proto_model.Split splits = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->splits_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->splits(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_model.Tree)
  GOOGLE_DCHECK_NE(&from, this);
  const Tree* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_model.Tree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_model.Tree)
    MergeFrom(*source);
  }
}

void Tree::MergeFrom(const Tree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_model.Tree)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  leaf_.MergeFrom(from.leaf_);
  splits_.MergeFrom(from.splits_);
}

void Tree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_model.Tree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tree::CopyFrom(const Tree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_model.Tree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tree::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->leaf())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->splits())) return false;
  return true;
}

void Tree::Swap(Tree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tree::InternalSwap(Tree* other) {
  using std::swap;
  leaf_.InternalSwap(&other->leaf_);
  splits_.InternalSwap(&other->splits_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tree::GetMetadata() const {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Bound::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bound::kBoundValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bound::Bound()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_model_2eproto::InitDefaultsBound();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_model.Bound)
}
Bound::Bound(const Bound& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      bound_val_(from.bound_val_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto_model.Bound)
}

void Bound::SharedCtor() {
  _cached_size_ = 0;
}

Bound::~Bound() {
  // @@protoc_insertion_point(destructor:proto_model.Bound)
  SharedDtor();
}

void Bound::SharedDtor() {
}

void Bound::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bound::descriptor() {
  ::protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bound& Bound::default_instance() {
  ::protobuf_model_2eproto::InitDefaultsBound();
  return *internal_default_instance();
}

Bound* Bound::New(::google::protobuf::Arena* arena) const {
  Bound* n = new Bound;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bound::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_model.Bound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bound_val_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Bound::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_model.Bound)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float bound_val = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13u, input, this->mutable_bound_val())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_bound_val())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_model.Bound)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_model.Bound)
  return false;
#undef DO_
}

void Bound::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_model.Bound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float bound_val = 1;
  for (int i = 0, n = this->bound_val_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->bound_val(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_model.Bound)
}

::google::protobuf::uint8* Bound::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto_model.Bound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float bound_val = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(1, this->bound_val_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_model.Bound)
  return target;
}

size_t Bound::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_model.Bound)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float bound_val = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bound_val_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->bound_val_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bound::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_model.Bound)
  GOOGLE_DCHECK_NE(&from, this);
  const Bound* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bound>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_model.Bound)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_model.Bound)
    MergeFrom(*source);
  }
}

void Bound::MergeFrom(const Bound& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_model.Bound)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bound_val_.MergeFrom(from.bound_val_);
}

void Bound::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_model.Bound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bound::CopyFrom(const Bound& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_model.Bound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bound::IsInitialized() const {
  return true;
}

void Bound::Swap(Bound* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bound::InternalSwap(Bound* other) {
  using std::swap;
  bound_val_.InternalSwap(&other->bound_val_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bound::GetMetadata() const {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Model::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Model::kTreeFieldNumber;
const int Model::kFeatureBoundsFieldNumber;
const int Model::kLrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Model::Model()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_model_2eproto::InitDefaultsModel();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_model.Model)
}
Model::Model(const Model& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tree_(from.tree_),
      feature_bounds_(from.feature_bounds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lr_ = from.lr_;
  // @@protoc_insertion_point(copy_constructor:proto_model.Model)
}

void Model::SharedCtor() {
  _cached_size_ = 0;
  lr_ = 0;
}

Model::~Model() {
  // @@protoc_insertion_point(destructor:proto_model.Model)
  SharedDtor();
}

void Model::SharedDtor() {
}

void Model::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Model::descriptor() {
  ::protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Model& Model::default_instance() {
  ::protobuf_model_2eproto::InitDefaultsModel();
  return *internal_default_instance();
}

Model* Model::New(::google::protobuf::Arena* arena) const {
  Model* n = new Model;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Model::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_model.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tree_.Clear();
  feature_bounds_.Clear();
  lr_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Model::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_model.Model)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_model.Tree tree = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_tree()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto_model.Bound feature_bounds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_feature_bounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float lr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_lr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_model.Model)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_model.Model)
  return false;
#undef DO_
}

void Model::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_model.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto_model.Tree tree = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tree_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tree(static_cast<int>(i)), output);
  }

  // repeated .proto_model.Bound feature_bounds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feature_bounds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->feature_bounds(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // required float lr = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->lr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_model.Model)
}

::google::protobuf::uint8* Model::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto_model.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto_model.Tree tree = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tree_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tree(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto_model.Bound feature_bounds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feature_bounds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->feature_bounds(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required float lr = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->lr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_model.Model)
  return target;
}

size_t Model::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_model.Model)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required float lr = 3;
  if (has_lr()) {
    total_size += 1 + 4;
  }
  // repeated .proto_model.Tree tree = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tree_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tree(static_cast<int>(i)));
    }
  }

  // repeated .proto_model.Bound feature_bounds = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->feature_bounds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->feature_bounds(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Model::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_model.Model)
  GOOGLE_DCHECK_NE(&from, this);
  const Model* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Model>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_model.Model)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_model.Model)
    MergeFrom(*source);
  }
}

void Model::MergeFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_model.Model)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tree_.MergeFrom(from.tree_);
  feature_bounds_.MergeFrom(from.feature_bounds_);
  if (from.has_lr()) {
    set_lr(from.lr());
  }
}

void Model::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_model.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Model::CopyFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_model.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Model::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->tree())) return false;
  return true;
}

void Model::Swap(Model* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Model::InternalSwap(Model* other) {
  using std::swap;
  tree_.InternalSwap(&other->tree_);
  feature_bounds_.InternalSwap(&other->feature_bounds_);
  swap(lr_, other->lr_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Model::GetMetadata() const {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto_model

// @@protoc_insertion_point(global_scope)
